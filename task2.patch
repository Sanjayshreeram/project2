From c90cb241ba98dbdc7c27a5e13746c05578db6f52 Mon Sep 17 00:00:00 2001
From: Your Name <sanjayshreeram77@gmail.com>
Date: Thu, 13 Jul 2023 14:11:40 +0530
Subject: [PATCH]  made changes in file

---
 src/App.tsx   | 17 +++++++++++++++++
 src/Graph.tsx | 14 +++++++++++---
 2 files changed, 28 insertions(+), 3 deletions(-)

diff --git a/src/App.tsx b/src/App.tsx
index 0728518..c65650d 100644
--- a/src/App.tsx
+++ b/src/App.tsx
@@ -8,6 +8,7 @@ import './App.css';
  */
 interface IState {
   data: ServerRespond[],
+  showGraph:boolean
 }
 
 /**
@@ -22,6 +23,7 @@ class App extends Component<{}, IState> {
       // data saves the server responds.
       // We use this state to parse data down to the child element (Graph) as element property
       data: [],
+      showGraph:false,
     };
   }
 
@@ -29,6 +31,7 @@ class App extends Component<{}, IState> {
    * Render Graph react component with state.data parse as property data
    */
   renderGraph() {
+    if(this.state.showGraph)
     return (<Graph data={this.state.data}/>)
   }
 
@@ -41,6 +44,20 @@ class App extends Component<{}, IState> {
       // Previous data in the state and the new data from server
       this.setState({ data: [...this.state.data, ...serverResponds] });
     });
+    let x = 0;
+        const interval = setInterval(() => {
+          DataStreamer.getData((serverResponds: ServerRespond[]) => {
+            this.setState({
+              data: serverResponds,
+              showGraph: true,
+            });
+          });
+          x++;
+        if (x > 1000) {
+           clearInterval(interval);
+          }
+       }, 100);
+
   }
 
   /**
diff --git a/src/Graph.tsx b/src/Graph.tsx
index 3b2a7da..1134111 100644
--- a/src/Graph.tsx
+++ b/src/Graph.tsx
@@ -14,7 +14,7 @@ interface IProps {
  * Perspective library adds load to HTMLElement prototype.
  * This interface acts as a wrapper for Typescript compiler.
  */
-interface PerspectiveViewerElement {
+interface PerspectiveViewerElement  extends HTMLElement {
   load: (table: Table) => void,
 }
 
@@ -32,7 +32,8 @@ class Graph extends Component<IProps, {}> {
 
   componentDidMount() {
     // Get element to attach the table from the DOM.
-    const elem: PerspectiveViewerElement = document.getElementsByTagName('perspective-viewer')[0] as unknown as PerspectiveViewerElement;
+    console.log('rendering');
+    const elem = document.getElementsByTagName('perspective-viewer')[0] as unknown as PerspectiveViewerElement;
 
     const schema = {
       stock: 'string',
@@ -41,14 +42,21 @@ class Graph extends Component<IProps, {}> {
       timestamp: 'date',
     };
 
-    if (window.perspective && window.perspective.worker()) {
+    if (window.perspective ) {
       this.table = window.perspective.worker().table(schema);
     }
     if (this.table) {
       // Load the `table` in the `<perspective-viewer>` DOM reference.
+      console.log('change table');
 
       // Add more Perspective configurations here.
       elem.load(this.table);
+      elem.setAttribute('view', 'y_line');
+      elem.setAttribute('column-pivots', '["stock"]');
+      elem.setAttribute('row-pivots', '["timestamp"]');
+     elem.setAttribute('columns', '["top_ask_price"]');
+      elem.setAttribute('aggregates', '{"stock":"distinct count","top_ask_price":"avg","top_bid_price":"avg","timestamp":"distinct count"}');
+
     }
   }
 
-- 
2.41.0.windows.1

